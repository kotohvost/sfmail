{This pascal src was generated by
 ASCII-Config Parser Maker
 version 1.01/beta
 (C)1994 Anton Deinow Software Research Lab. }

const
 nTAcfgWords=6;

type
 tTAcfgWords=array[1..nTAcfgWords] of longint;
 tTAcfgTypes=array[1..nTAcfgWords] of ArgType;

const
 TAcfgWords:tTAcfgWords=(
   $0E6653C9  {Link},
   $3A97C070  {Log},
   $82AD5E29  {LogLevel},
   $1B81D427  {Robot},
   $45C7FA2A  {Sf-MailCfg},
   $B8FAAE1A  {ForceZone});

 TAcfgTypes:tTAcfgTypes=(
   ptString  {Link},
   ptString  {Log},
   ptString  {LogLevel},
   ptString  {Robot},
   ptString  {T-MailCtl},
   ptSwitch  {ForceZone});

var
 TAcfg:tCfgRecord;
 WordN:word;

{$F+}
function GetTAword(w:word):longint;
begin
 GetTAword:=TAcfgWords[w];
end;

function GetTAtype(w:word):ArgType;
begin
 GetTAtype:=TAcfgTypes[w];
end;
{$F-}

procedure ReadTAconfig;
begin
 if not ConfigInit(TAcfg,CfgFname) then {*customize error-routine call*};

 with TAcfg do begin
       QuoteChar:=#39;
     CommentChar:=#37;
  OnOffSwitch[0]:='no';
  OnOffSwitch[1]:='yes';
 end;

 repeat
  if not ConfigNextRead(TAcfg,nTAcfgWords, @GetTAword,@GetTAtype,WordN)
    then with TAcfg do
     Case CfgErrorCode of
      5000: TAshowError('Unknown word `'+LastCtlWord+#$27,
             'Line #'+Long2str(CfgLine));
      5001: TAshowError('Invalid argument for `'+LastCtlWord+#$27,
             'Line #'+Long2str(CfgLine));
     else ForceDosError(CfgErrorCode,CfgName,true);
     end;

  if TAcfg.CfgStatus <>stCfgEOF then
  begin
   Case WordN of
    1: AddLinkData;
    2: LogName:=ValString;
    3: begin
         LogLevel:='';
         for i:=1 to Length(ValString) do begin
           if ValString[i] ='.' then ValString[i]:=' ';
           if Pos(ValString[i],LogLevel) =0 then
             LogLevel:=LogLevel+ValString[i];
         end;
       end;
    4: AddRobot;
    5: Sf_MailCfgFname:=ValString;
    6: ForceZone:=ValSwitch;
   end;
  end;
 until TAcfg.CfgStatus=stCfgEOF;
 ConfigClose(TAcfg);
end;
