{This pascal src was generated by
 ASCII-Config Parser Maker 
 version 1.01/beta 
 (C)1994 Anton Deinow Software Research Lab. }

const
 nTMWords=5;

type
 tTMWords=array[1..nTMWords] of longint;
 tTMctlTypes=array[1..nTMWords] of ArgType;

const
 TMwords:tTMWords=(
   $7E90B1F2  {Address},
   $586417F5  {Aka},
   $21FD8D98  {File_Boxes},
   $0CBD0E5A  {Mail_Out},
   $75C4A5B3  {Packets});

 TMtypes:tTMctlTypes=(
   ptString  {Address},
   ptString  {Aka},
   ptString  {File_Boxes},
   ptString  {Mail_Out},
   ptString  {Packets});

var
 TMctl:tCfgRecord;
 WNtm:word;

{$F+}
function GetTMword(w:word):longint;
begin
 GetTMword:=TMwords[w];
end;

function GetTMtype(w:word):ArgType;
begin
 GetTMtype:=TMtypes[w];
end;
{$F-}

procedure ReadTMctl;
begin
 if not ConfigInit(TMctl,tMailCtlPath+'t-Mail.ctl') then {*customize error-routine call*};

 with TMctl do begin
       QuoteChar:=#39;
     CommentChar:=#59;
  OnOffSwitch[0]:='no';
  OnOffSwitch[1]:='yes';
 end;

 repeat
  if not ConfigNextRead(TMctl,nTMWords, @GetTMword,@GetTMtype,WNtm)
    then with TMctl do
     if (CfgErrorCode <>5000)and(CfgErrorCode <>5001) then
       ForceDosError(CfgErrorCode,CfgName,true)
     else
  else

  if TMctl.CfgStatus <>stCfgEOF then
  begin
   Case WNtm of
    1: AddAka(ValString);
    2: AddAka(ValString);
    3: FileBoxesPath:=AddBackSlash(ValString);
    4: NetMailPath:=AddBackSlash(ValString);
    5: PacketsPath:=Copy(ValString,1,Length(ValString)-1);
   end;
  end;
 until TMctl.CfgStatus=stCfgEOF;
 ConfigClose(TMctl);
end;
